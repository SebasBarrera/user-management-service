name: CI/CD Pipeline - User Management Service

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código fuente
        uses: actions/checkout@v3

      - name: Configurar Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Ejecutar tests (BDD + TDD)
        run: mvn -f user-management-service/pom.xml clean test

      - name: Empaquetar aplicación
        run: mvn -f user-management-service/pom.xml package

      - name: Iniciar sesión en DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir imagen Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/user-service:latest ./user-management-service


      - name: Publicar imagen en DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest

      - name: Análisis estático de código con SonarCloud 
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: ./user-management-service
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_SCANNER_OPTS: >
            -Dsonar.projectKey=SebasBarrera_user-management-service
            -Dsonar.organization=sebasbarrera-github
            -Dsonar.host.url=https://sonarcloud.io



